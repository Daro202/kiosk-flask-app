Utwórz aplikację webową w Pythonie (Flask), która działa jako firmowy kiosk do wyświetlania dashboardów z inspiracjami i wynikami.

🎯 CEL:
Aplikacja ma działać na serwerze korporacyjnym, a następnie być otwierana w trybie kiosk na Raspberry Pi i terminalach Wyse.  
Ma pokazywać wykresy, zdjęcia i opisy innowacji oraz mieć panel administracyjny do edycji treści.

💡 FUNKCJE:
1️⃣ Główny ekran (dashboard):
   - Nagłówek z tytułem (edycja przez panel admina)
   - Główna część ekranu pokazuje:
     • Wykresy (Chart.js, dane z pliku data.csv)
     • Pokaz slajdów (zdjęcia z folderu /static/images)
     • Karty z inspiracjami (tekst + obraz)
   - Dolny margines – miejsce na opis / notatkę (edycja przez admina)
   - Przełączanie sekcji co 30 sekund automatycznie (rotacja)

2️⃣ Panel boczny (menu):
   - Przycisk: „Wykresy”, „Inspiracje”, „Zdjęcia”, „O nas”
   - Płynne przejścia, aktywna sekcja podświetlona

3️⃣ Panel administracyjny (/admin):
   - Prosty login PIN (np. 7456, zapisany w config.json)
   - Pola do wpisania: nagłówek, opis, upload zdjęć
   - Dane zapisywane w SQLite lub pliku JSON
   - Po zapisaniu treść natychmiast widoczna na ekranie głównym

4️⃣ Wygląd:
   - Styl Tailwind CSS (CDN)
   - Kolory: biel, pomarańcz, szarość (styl Stora Enso)
   - Duże, czytelne czcionki (Roboto / Lato)
   - Tryb ciemny / jasny 🌙☀️
   - Animowany leniwiec 🦥 w prawym dolnym rogu (GIF lub SVG)
   - Layout responsywny (Full HD, bez pasków przewijania)

5️⃣ Backend:
   - Flask + Waitress (serwer produkcyjny)
   - Struktura projektu:
     .
     ├── app.py
     ├── data.csv
     ├── config.json
     ├── /templates
     │     ├── index.html
     │     └── admin.html
     ├── /static
     │     ├── /css/
     │     ├── /js/
     │     └── /images/
     └── requirements.txt

6️⃣ Bezpieczeństwo:
   - Panel admina chroniony PIN-em
   - Wyłączony tryb debug
   - Brak publicznych endpointów bez autoryzacji
   - Aplikacja działa wyłącznie w sieci LAN
   - Możliwość użycia HTTPS (lokalny certyfikat IT)

🧰 Dodatkowo:
   - Aplikacja powinna mieć automatyczne odświeżanie treści (np. co 5 minut)
   - Kod i komentarze w języku polskim
   - Plik `README_install.txt` z instrukcją uruchomienia na serwerze Windows i Raspberry

Po utworzeniu projektu uruchom aplikację Flask i pokaż adres URL w Replit, aby można było ją przetestować w przeglądarce.
